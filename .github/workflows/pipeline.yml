name: Main workflow
on: push   #Event 

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build the node js project
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 16
          fetch-depth: 0
      - run: npm install
      - run: npm run build --if-present
  sonarcloud:
    runs-on: ubuntu-latest
    name: SAST scan (SonarCloud)
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven cloud
      run:  mvn -B verify sonar:sonar -Dsonar.projectKey=javaproject-yuliani -Dsonar.organization=javaproject-yuliani -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  
  security:
      runs-on: ubuntu-latest
      #needs: build  #can be disabled
      name: SCA scan Snyk
      steps:
        - uses: actions/checkout@master
        - name: Run Snyk to check for vulnerabilities
          uses: snyk/actions/node@master
          continue-on-error: true
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  zap_scan:
      runs-on: ubuntu-latest
      #needs: security
      name: Run DAST scan on the web application
      steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
            ref: master
        - name: ZAP Scan
          uses: zaproxy/action-baseline@v0.6.1
          with:
            docker_name: 'owasp/zap2docker-stable'
            target: 'http://testphp.vulnweb.com/'
            rules_file_name: '.zap/rules.tsv'
            cmd_options: '-a'
